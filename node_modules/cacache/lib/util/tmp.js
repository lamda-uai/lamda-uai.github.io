'use strict'

<<<<<<< HEAD
const BB = require('bluebird')

const figgyPudding = require('figgy-pudding')
=======
const fs = require('@npmcli/fs')

>>>>>>> 5c1ca5729ada370419ab8dfd3af061376cb0fa47
const fixOwner = require('./fix-owner')
const path = require('path')
const rimraf = BB.promisify(require('rimraf'))
const uniqueFilename = require('unique-filename')

const TmpOpts = figgyPudding({
  tmpPrefix: {}
})

module.exports.mkdir = mktmpdir
<<<<<<< HEAD
function mktmpdir (cache, opts) {
  opts = TmpOpts(opts)
  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix)
  return fixOwner.mkdirfix(cache, tmpTarget).then(() => {
    return tmpTarget
  })
=======

function mktmpdir (cache, opts = {}) {
  const { tmpPrefix } = opts
  const tmpDir = path.join(cache, 'tmp')
  return fs.mkdir(tmpDir, { recursive: true, owner: 'inherit' })
    .then(() => {
      // do not use path.join(), it drops the trailing / if tmpPrefix is unset
      const target = `${tmpDir}${path.sep}${tmpPrefix || ''}`
      return fs.mkdtemp(target, { owner: 'inherit' })
    })
>>>>>>> 5c1ca5729ada370419ab8dfd3af061376cb0fa47
}

module.exports.withTmp = withTmp
function withTmp (cache, opts, cb) {
  if (!cb) {
    cb = opts
    opts = null
  }
<<<<<<< HEAD
  opts = TmpOpts(opts)
  return BB.using(mktmpdir(cache, opts).disposer(rimraf), cb)
}

module.exports.fix = fixtmpdir
=======
  return fs.withTempDir(path.join(cache, 'tmp'), cb, opts)
}

module.exports.fix = fixtmpdir

>>>>>>> 5c1ca5729ada370419ab8dfd3af061376cb0fa47
function fixtmpdir (cache) {
  return fixOwner(cache, path.join(cache, 'tmp'))
}

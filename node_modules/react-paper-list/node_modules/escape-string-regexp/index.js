'use strict';

<<<<<<< HEAD
const matchOperatorsRegex = /[|\\{}()[\]^$+*?.-]/g;

=======
>>>>>>> 5c1ca5729ada370419ab8dfd3af061376cb0fa47
module.exports = string => {
	if (typeof string !== 'string') {
		throw new TypeError('Expected a string');
	}

<<<<<<< HEAD
	return string.replace(matchOperatorsRegex, '\\$&');
=======
	// Escape characters with special meaning either inside or outside character sets.
	// Use a simple backslash escape when it’s always valid, and a \unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.
	return string
		.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&')
		.replace(/-/g, '\\x2d');
>>>>>>> 5c1ca5729ada370419ab8dfd3af061376cb0fa47
};

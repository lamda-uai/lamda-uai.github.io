import React, { ChangeEvent } from 'react';
import { LiteratureEntry, SortCriteria } from './types';
interface LiteraturesProp {
    title: string;
    description: string;
    entries: LiteratureEntry[];
    listHeader: string | null;
    enableSearch: boolean;
    enableFilter: boolean;
    enableSort: boolean;
    enableScrollTopButton: boolean;
    defaultSortCriterion: SortCriteria;
    defaultReverse: boolean;
}
interface LiteraturesState {
    searchPayload: string;
    sortCriterion: SortCriteria;
    reverse: boolean;
    venues: string[];
    years: string[];
    tags: string[];
    allVenues: string[];
    allTags: string[];
    allYears: string[];
}
export declare class Literatures extends React.Component<LiteraturesProp, LiteraturesState> {
    static defaultProps: {
        listHeader: string;
        enableSearch: boolean;
        enableFilter: boolean;
        enableSort: boolean;
        defaultSortCriterion: SortCriteria;
        defaultReverse: boolean;
        enableScrollTopButton: boolean;
    };
    constructor(prop: LiteraturesProp);
    get searchKeywords(): string[];
    get visibleEntries(): LiteratureEntry[];
    /**
     * Calculate the similarity between this.searchKeywords and the given entry.
     *
     * @param entry
     * @private
     * @return the similarity [0,100]: the higher the more similar
     */
    private calSimilarity;
    onSearchBoxChange(event: ChangeEvent<HTMLInputElement>): void;
    onSortCriterionChange(criterion: SortCriteria): void;
    onReverseChange(event: ChangeEvent<HTMLInputElement>): void;
    onFilterChoicesChange(name: 'tag' | 'date' | 'venue', selected: string[]): void;
    render(): JSX.Element;
}
export {};
